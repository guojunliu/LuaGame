
require "LuaGameManager"

local speed = 0.2;
local canCollision = true;

function start()

end

function update()

end

function fixedUpdate()
    --Vector2 direction = virtualInputMoveDirection.GetDirection();
    --float lenPercent = virtualInputMoveDirection.GetLenPercent();
    --//Debug.Log($"MoveDir:{direction}, MoveLenPercent:{lenPercent}");
    --gameObject.transform.position += new Vector3(direction.x * speed, 0, direction.y * speed);

    local vsp = vmd:GetComponent(typeof(CS.VirtualInputMoveDirection));
    local direction = vsp:GetDirection();
    local lenPercent = vsp:GetLenPercent();

    --print("direction x: " .. direction.x .. "  y: " .. direction.y ..  "   lenPercent : " .. lenPercent)

    local oldV = self.transform.position;
    --print("oldV x: " .. oldV.x .. "  y: " .. oldV.z)

    local newV = CS.UnityEngine.Vector3(oldV.x + direction.x * speed, oldV.y, oldV.z + direction.y * speed);
    --print("newV x: " .. newV.x .. "  y: " .. newV.z)

    self.transform.position = newV;

    oldV = null;
    newV = null;
end

function ondestroy()

end

function onCollisionEnter()
    if (canCollision == false)
    then
        return;
    end

    canCollision = false;
    local gsp = collision:GetComponent(typeof(CS.LuaGameObjectSp));
    print("row: " .. gsp.table.row .. "   column : " .. gsp.table.column);
    local sp = gsp.table;
    LuaGameManager:Instance():ChangeCube(sp);
end

function onCollisionExit()
    if (canCollision == false)
    then
        return;
    end
end

function onJumpClick()
    print("lua JumpClick");
    canCollision = true;
    self.transform:DOLocalMoveY(15, 0.5);
end